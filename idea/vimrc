"" Base Settings
"" ========================================================
let mapleader=","

nnoremap [w <C-o>
nnoremap ]w <C-i>
nnoremap [q :tabprev<CR>
nnoremap ]q :tabnext<CR>

nnoremap [[ :action MethodUp<CR>
nnoremap ]] :action MethodDown<CR>

filetype plugin on
filetype indent on

set backspace=eol,start,indent

set showmode
set surround
set showcmd

set ignorecase smartcase
set incsearch
set hlsearch
" don't need the results all the time
map <leader>h :noh<CR>
nmap <leader>f :action FindUsages<CR>

set visualbell

set history=10000                            " keep x lines of command line history
set scrolloff=10 sidescrolloff=15            " keep some lines before and after the cursor visible
set clipboard=unnamedplus,unnamed,ideaput    " integrate with system clipboard
set ideastatusicon=enabled                   " blue icon in insert mode

"" Plugin Settings
"" ========================================================
set nerdtree
set surround

set easymotion
let g:EasyMotion_do_mapping=0

map <leader><leader>w <Plug>(easymotion-w)
map <leader>s <Plug>(easymotion-s)

" Which-key settings
set which-key
set timeout timeoutlen=2000

let g:WhichKey_FontSize = 18
let g:WhichKey_CommandColor = "#41ead4"
let g:WhichKey_PrefixColor = "#f335b2"
let g:WhichKey_SortOrder = "by_key_prefix_first"

let g:WhichKeyDesc_leader = "<leader> Leader key"

let g:WhichKeyDesc_leader = "<leader>x Open file explorer"

let g:WhichKeyDesc_easymotion = "<leader>j Jump with Easymotion"

let g:WhichKeyDesc_comment = "<leader>c Comment line"

let g:WhichKeyDesc_fold = "<leader>z Folding"
let g:WhichKeyDesc_fold_all = "<leader>zc Fold all regions"
let g:WhichKeyDesc_unfold_all = "<leader>zo Unfold all regions"

let g:WhichKeyDesc_window = "<leader>w Window splits"
let g:WhichKeyDesc_window_split_vertically = "<leader>wv Split vertically"
let g:WhichKeyDesc_window_split_horizontally = "<leader>wh Split horizontally"
let g:WhichKeyDesc_window_split_unsplit = "<leader>wu Unsplit"
let g:WhichKeyDesc_window_split_move_editor = "<leader>wm Move editor to opposite tab group"


let g:WhichKeyDesc_display = "<leader>d Display options"
let g:WhichKeyDesc_zen_mode = "<leader>dz Toggle Zen mode"
let g:WhichKeyDesc_df_mode = "<leader>dd Toggle Distraction-Free mode"
let g:WhichKeyDesc_fullscreen = "<leader>df Toggle full screen"

let g:WhichKeyDesc_action= "<leader>a Actions"
let g:WhichKeyDesc_action_context_menu = "<leader>am Open context menu"
let g:WhichKeyDesc_action_search = "<leader>as Open command modal"

let g:WhichKeyDesc_file_quickLook = "`` Recent files"

let g:WhichKeyDesc_close_tab = "<leader>q Close active tab"

let g:WhichKeyDesc_refactoring = "<leader>r Refactoring menu"
let g:WhichKeyDesc_refactoring_rename = "<leader>rn Rename element"
let g:WhichKeyDesc_refactoring_method = "<leader>rm Extract method"
let g:WhichKeyDesc_refactoring_variable = "<leader>rv Introduce variable"
let g:WhichKeyDesc_refactoring_field = "<leader>rf Introduce field"
let g:WhichKeyDesc_refactoring_signature = "<leader>rs Change signature"
let g:WhichKeyDesc_refactoring_all = "<leader>rr Open refactorings list"

let g:WhichKeyDesc_goto = "<leader>g Go to X"
let g:WhichKeyDesc_goto_declaration = "<leader>gd Go to Definition"
let g:WhichKeyDesc_goto_type_declaration = "<leader>gy Go to Type Definition"
let g:WhichKeyDesc_goto_implementation = "<leader>gi Go to Implementation"
let g:WhichKeyDesc_goto_usages = "<leader>gu Go to Usages"
let g:WhichKeyDesc_goto_test = "<leader>gt Go to Test"
let g:WhichKeyDesc_goto_back = "<leader>gb Go Back"
let g:WhichKeyDesc_goto_forward = "<leader>gf Go Forward"

let g:WhichKeyDesc_git = "<leader>g Git operations"
let g:WhichKeyDesc_git_commit = "<leader>gc Open Git commit dialog"
let g:WhichKeyDesc_git_status = "<leader>gs Open Git status dialog"
let g:WhichKeyDesc_git_branches = "<leader>gb Open Git branches list"

let g:WhichKeyDesc_errors = "<leader>e Error navigation"
let g:WhichKeyDesc_errors_next = "<leader>en Go to next error in solution"
let g:WhichKeyDesc_errors_prev = "<leader>ep Go to previous error in solution"


"" Key mappings
"" ========================================================

" Tab navigation
nnoremap <A-n> :tabnext<CR>
nnoremap <A-p> :tabprev<CR>

" Pane navigation
nnoremap <A-h> <C-w>h
nnoremap <A-l> <C-w>l
nnoremap <A-k> <C-w>k
nnoremap <A-j> <C-w>j

" Easy visual indentation
vnoremap < <gv
vnoremap > >gv

map <D-=> :action EditorIncreaseFontSize<CR>
map <D--> :action EditorDecreaseFontSize<CR>
map <D-0> :action EditorResetFontSize<CR>

map <D-1> :action ActivateProjectToolWindow<CR>
map <D-2> :action ActivateTerminalToolWindow<CR>

"" Leader commands
"" ========================================================


" Comment lines
map <leader>c <action>(CommentByLineComment)

" Open NERDTree (use q to exit)
map <leader>x :NERDTreeToggle<CR>

" Folding
map <leader>zc :action CollapseAllRegions<CR>
map <leader>zo :action ExpandAllRegions<CR>

" Window splits
map <leader>ww :action SplitVertically<CR>
map <leader>ws :action SplitHorizontally<CR>
map <leader>wu :action Unsplit<CR>
map <leader>wm :action MoveEditorToOppositeTabGroup<CR>

" Display options
map <leader>dd :action ToggleDistractionFreeMode<CR>
map <leader>dz :action ToggleZenMode<CR>
map <leader>df :action ToggleFullScreen<CR>

" Actions
map <leader>am <action>(ShowIntentionActions)
map <leader>as <action>(SearchEverywhere)

" File navigation
map <leader>of <Action>(GotoFile)
map <leader>or <Action>(RecentFiles)
map <leader>oc <Action>(FindInPath)
map `` <Action>(RecentFiles)
map <leader>ol <Action>(RecentLocations)

" Go to code
nmap <leader>gd <Action>(GotoDeclaration)
nmap <leader>gy <Action>(GotoTypeDeclaration)
nmap <leader>gi <Action>(GotoImplementation)
nmap <leader>gu <Action>(ShowUsages)
nmap <leader>gt <Action>(GotoTest)
nmap <leader>gb <Action>(Back)
nmap <leader>gf <Action>(Forward)
nmap <Tab> >gv


set ideajoin
